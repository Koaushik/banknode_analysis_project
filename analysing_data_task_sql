#Task 1: List all regions along with the number of users assigned to each region.

SELECT w.region_name, COUNT(DISTINCT u.consumer_id)
FROM user_nodes u 
RIGHT JOIN world_regions w  ON u.region_id = w.region_id
GROUP BY w.region_name
ORDER BY w.region_name;

#Task 2: Find the user who made the largest deposit amount and the transaction type for that deposit.

SELECT consumer_id,transaction_type,transaction_amount
FROM user_transaction
WHERE transaction_amount in (SELECT MAX(transaction_amount) FROM user_transaction);

#Task 3: Calculate the total amount deposited for each user in the "Europe" region.

SELECT un.consumer_id,SUM(ut.transaction_amount)
FROM user_transaction ut 
JOIN user_nodes un ON ut.consumer_id = un.consumer_id
WHERE un.region_id = 2 AND ut.transaction_type = 'deposit'
GROUP BY un.consumer_id;

#Task 4: Calculate the total number of transactions made by each user in the "United States" region.

SELECT ut.consumer_id,COUNT(ut.transaction_amount) as transaction_count 
FROM user_transaction ut 
JOIN user_nodes un ON un.consumer_id = ut.consumer_id
JOIN world_regions wr ON un.region_id = wr.region_id
WHERE wr.region_name = 'United States'
GROUP BY ut.consumer_id;

#Task 5: Calculate the total number of users who made more than 5 transactions.

SELECT consumer_id,COUNT(transaction_amount)
FROM user_transaction
GROUP BY consumer_id
HAVING COUNT(transaction_amount) > 5;

#Task 6: Find the regions with the highest number of nodes assigned to them.

SELECT wr.region_name,COUNT(un.node_id)
FROM user_nodes un 
JOIN world_regions wr ON un.region_id= wr.region_id
GROUP BY wr.region_name;

#Task 7: Find the user who made the largest deposit amount in the "Australia" region.

SELECT u.consumer_id,MAX(ut.transaction_amount) AS largest_deposit
FROM user_nodes u 
JOIN user_transaction ut ON u.consumer_id = ut.consumer_id
WHERE u.consumer_id IN (
    SELECT un.consumer_id
    FROM user_nodes un 
    JOIN world_regions wr ON un.region_id = wr.region_id
    WHERE wr.region_name LIKE 'Australia'
) AND ut.transaction_type LIKE 'deposit'
GROUP BY u.consumer_id
ORDER BY largest_deposit DESC
LIMIT 1;

#Task 8: Calculate the total amount deposited by each user in each region.

SELECT ut.consumer_id,SUM(ut.transaction_amount) AS total_deposited_amount ,wr.region_name
FROM user_nodes un 
JOIN user_transaction ut ON un.consumer_id = ut.consumer_id
JOIN world_regions wr ON wr.region_id = un.region_id
WHERE ut.transaction_type LIKE 'deposit'
GROUP BY ut.consumer_id,wr;

#Task 9: Retrieve the total number of transactions for each region.

SELECT wr.region_name,COUNT(ut.transaction_amount) AS total_transactions
FROM user_transaction ut 
JOIN user_nodes un ON un.consumer_id = ut.consumer_id
JOIN world_regions wr ON wr.region_id = un.region_id
GROUP BY wr.region_name;

#Task 10: Write a query to find the total deposit amount for each region (region_name) in the user_transaction table.

SELECT w.region_name, SUM(t.transaction_amount) AS total_deposit
FROM user_transaction t
JOIN user_nodes u ON t.consumer_id = u.consumer_id
JOIN world_regions w ON u.region_id = w.region_id
WHERE t.transaction_type = 'deposit'
GROUP BY w.region_name;

#Task 11: Write a query to find the top 5 consumers who have made the highest total transaction amount (sum of all their deposit transactions) in the user_transaction table.

SELECT consumer_id,SUM(transaction_amount) AS total_transaction
FROM user_transaction
WHERE transaction_type LIKE 'deposit'
GROUP BY consumer_id
ORDER BY total_transaction DESC
LIMIT 5;

#Task 12: How many consumers are allocated to each region?

SELECT un.region_id,wr.region_name,COUNT(DISTINCT consumer_id) AS total_consumers 
FROM user_nodes un
JOIN world_regions wr ON un.region_id = wr.region_id
GROUP BY un.region_id
ORDER BY un.region_id;

#Task 13: What is the unique count and total amount for each transaction type?

SELECT transaction_type,COUNT(DISTINCT consumer_id) AS unique_count,SUM(transaction_amount) AS total_amount
FROM user_transaction 
GROUP BY transaction_type;

#Task 14: What is the average total historical deposit counts and amounts for all customers?

WITH DepositInfo AS (
    SELECT 
        consumer_id,
        COUNT(*) AS deposit_count,
        SUM(transaction_amount) AS deposit_amount
    FROM 
        user_transaction
    WHERE 
        transaction_type = 'deposit'
    GROUP BY 
        consumer_id
)

SELECT 
    'deposit' AS transaction_type,
    ROUND(AVG(deposit_count)) AS avg_deposit_count,
    ROUND(AVG(deposit_amount)) AS avg_deposit_amount
FROM 
    DepositInfo;

#Task 15: How many transactions were made by consumers from each region?

SELECT wr.region_name,COUNT(ut.transaction_amount) AS transaction_count
FROM user_transaction ut 
JOIN user_nodes un ON un.consumer_id = ut.consumer_id
JOIN world_regions wr ON un.region_id = wr.region_id
GROUP BY wr.region_name
